
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALERTA AND DESLIGAR DISPOSITIVO DOISPONTOS ENTAO ENVIAR ID LBRACE LIGAR LPAR NUM OPLOGIC PARA PONTO RBRACE RPAR SE SENAO SET TODOS VIRGULAnamedevice_list : IDnamedevice_list : ID VIRGULA namedevice_listdevice : DISPOSITIVO DOISPONTOS LBRACE namedevice_list RBRACEdevices : device devicesdevices : deviceatribuicao : SET ID OPLOGIC IDcondicional : SE ID OPLOGIC ID ENTAO cmdscondicional : SE ID OPLOGIC ID ENTAO cmds SENAO cmdsacao : LIGAR IDacao : DESLIGAR IDobsact : ENVIAR ALERTA LPAR ID RPAR IDobsact : ENVIAR ALERTA LPAR ID RPAR PARA TODOS DOISPONTOS namedevice_listcmds : atribuicao cmds\n| condicional cmds\n| obsact cmds\n| acao cmdscmds : atribuicao\n| condicional\n| obsact\n| acaoprograma : devices cmds PONTO'
    
_lr_action_items = {'ID':([0,3,],[2,2,]),'$end':([1,2,4,],[0,-1,-2,]),'VIRGULA':([2,],[3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'namedevice_list':([0,3,],[1,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> namedevice_list","S'",1,None,None,None),
  ('namedevice_list -> ID','namedevice_list',1,'p_namedevice_list_single','compilador.py',81),
  ('namedevice_list -> ID VIRGULA namedevice_list','namedevice_list',3,'p_namedevice_list_multi','compilador.py',85),
  ('device -> DISPOSITIVO DOISPONTOS LBRACE namedevice_list RBRACE','device',5,'p_device','compilador.py',90),
  ('devices -> device devices','devices',2,'p_devices_recursive','compilador.py',95),
  ('devices -> device','devices',1,'p_devices_single','compilador.py',99),
  ('atribuicao -> SET ID OPLOGIC ID','atribuicao',4,'p_atribuicao','compilador.py',105),
  ('condicional -> SE ID OPLOGIC ID ENTAO cmds','condicional',6,'p_condicional','compilador.py',110),
  ('condicional -> SE ID OPLOGIC ID ENTAO cmds SENAO cmds','condicional',8,'p_condicional_senao','compilador.py',115),
  ('acao -> LIGAR ID','acao',2,'p_acao','compilador.py',120),
  ('acao -> DESLIGAR ID','acao',2,'p_acao_desligar','compilador.py',124),
  ('obsact -> ENVIAR ALERTA LPAR ID RPAR ID','obsact',6,'p_enviar_alerta','compilador.py',129),
  ('obsact -> ENVIAR ALERTA LPAR ID RPAR PARA TODOS DOISPONTOS namedevice_list','obsact',9,'p_broadcast','compilador.py',134),
  ('cmds -> atribuicao cmds','cmds',2,'p_cmds_recursive','compilador.py',139),
  ('cmds -> condicional cmds','cmds',2,'p_cmds_recursive','compilador.py',140),
  ('cmds -> obsact cmds','cmds',2,'p_cmds_recursive','compilador.py',141),
  ('cmds -> acao cmds','cmds',2,'p_cmds_recursive','compilador.py',142),
  ('cmds -> atribuicao','cmds',1,'p_cmds_single','compilador.py',146),
  ('cmds -> condicional','cmds',1,'p_cmds_single','compilador.py',147),
  ('cmds -> obsact','cmds',1,'p_cmds_single','compilador.py',148),
  ('cmds -> acao','cmds',1,'p_cmds_single','compilador.py',149),
  ('programa -> devices cmds PONTO','programa',3,'p_programa','compilador.py',154),
]
