Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> devices cmds
Rule 2     devices -> device devices
Rule 3     devices -> device
Rule 4     device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE
Rule 5     device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE
Rule 6     device -> DISPOSITIVO LBRACE ID RBRACE
Rule 7     device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE
Rule 8     cmds -> command cmds
Rule 9     cmds -> command
Rule 10    command -> cmd
Rule 11    command -> cmd PONTO
Rule 12    cmd -> attrib
Rule 13    cmd -> obsact
Rule 14    cmd -> act
Rule 15    attrib -> SET ID EQUALS var
Rule 16    var -> NUM
Rule 17    var -> BOOL
Rule 18    empty -> <empty>
Rule 19    maybe_act -> act
Rule 20    maybe_act -> empty
Rule 21    obsact -> SE obs ENTAO maybe_act
Rule 22    obsact -> SE obs ENTAO act SENAO act
Rule 23    obs -> obs_base
Rule 24    obs -> obs_base AND obs
Rule 25    obs_base -> ID OPLOGIC var
Rule 26    act -> action ID
Rule 27    act -> ENVIAR ALERTA LPAR STRING RPAR ID
Rule 28    act -> ENVIAR ALERTA STRING ID
Rule 29    act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID
Rule 30    act -> ENVIAR ALERTA STRING VIRGULA ID ID
Rule 31    act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
Rule 32    act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list
Rule 33    action -> LIGAR
Rule 34    action -> DESLIGAR
Rule 35    id_list -> ID VIRGULA id_list
Rule 36    id_list -> ID

Terminals, with rules where they appear

ALERTA               : 27 28 29 30 31 32
AND                  : 24
BOOL                 : 17
DESLIGAR             : 34
DISPOSITIVO          : 4 5 6 7
DOISPONTOS           : 4 5 31 32
ENTAO                : 21 22
ENVIAR               : 27 28 29 30 31 32
EQUALS               : 15
ID                   : 4 5 5 6 7 7 15 25 26 27 28 29 29 30 30 31 35 36
LBRACE               : 4 5 6 7
LIGAR                : 33
LPAR                 : 27 29 31 32
NUM                  : 16
OPLOGIC              : 25
PARA                 : 31 32
PONTO                : 11
RBRACE               : 4 5 6 7
RPAR                 : 27 29 31 32
SE                   : 21 22
SENAO                : 22
SET                  : 15
STRING               : 27 28 29 30 31 32
TODOS                : 31 32
VIRGULA              : 5 7 29 30 31 35
error                : 

Nonterminals, with rules where they appear

act                  : 14 19 22 22
action               : 26
attrib               : 12
cmd                  : 10 11
cmds                 : 1 8
command              : 8 9
device               : 2 3
devices              : 1 2
empty                : 20
id_list              : 31 32 35
maybe_act            : 21
obs                  : 21 22 24
obs_base             : 23 24
obsact               : 13
program              : 0
var                  : 15 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . devices cmds
    (2) devices -> . device devices
    (3) devices -> . device
    (4) device -> . DISPOSITIVO DOISPONTOS LBRACE ID RBRACE
    (5) device -> . DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE
    (6) device -> . DISPOSITIVO LBRACE ID RBRACE
    (7) device -> . DISPOSITIVO LBRACE ID VIRGULA ID RBRACE

    DISPOSITIVO     shift and go to state 4

    program                        shift and go to state 1
    devices                        shift and go to state 2
    device                         shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> devices . cmds
    (8) cmds -> . command cmds
    (9) cmds -> . command
    (10) command -> . cmd
    (11) command -> . cmd PONTO
    (12) cmd -> . attrib
    (13) cmd -> . obsact
    (14) cmd -> . act
    (15) attrib -> . SET ID EQUALS var
    (21) obsact -> . SE obs ENTAO maybe_act
    (22) obsact -> . SE obs ENTAO act SENAO act
    (26) act -> . action ID
    (27) act -> . ENVIAR ALERTA LPAR STRING RPAR ID
    (28) act -> . ENVIAR ALERTA STRING ID
    (29) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID
    (30) act -> . ENVIAR ALERTA STRING VIRGULA ID ID
    (31) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> . ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list
    (33) action -> . LIGAR
    (34) action -> . DESLIGAR

    SET             shift and go to state 11
    SE              shift and go to state 12
    ENVIAR          shift and go to state 14
    LIGAR           shift and go to state 15
    DESLIGAR        shift and go to state 16

    cmds                           shift and go to state 5
    command                        shift and go to state 6
    cmd                            shift and go to state 7
    attrib                         shift and go to state 8
    obsact                         shift and go to state 9
    act                            shift and go to state 10
    action                         shift and go to state 13

state 3

    (2) devices -> device . devices
    (3) devices -> device .
    (2) devices -> . device devices
    (3) devices -> . device
    (4) device -> . DISPOSITIVO DOISPONTOS LBRACE ID RBRACE
    (5) device -> . DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE
    (6) device -> . DISPOSITIVO LBRACE ID RBRACE
    (7) device -> . DISPOSITIVO LBRACE ID VIRGULA ID RBRACE

    SET             reduce using rule 3 (devices -> device .)
    SE              reduce using rule 3 (devices -> device .)
    ENVIAR          reduce using rule 3 (devices -> device .)
    LIGAR           reduce using rule 3 (devices -> device .)
    DESLIGAR        reduce using rule 3 (devices -> device .)
    DISPOSITIVO     shift and go to state 4

    device                         shift and go to state 3
    devices                        shift and go to state 17

state 4

    (4) device -> DISPOSITIVO . DOISPONTOS LBRACE ID RBRACE
    (5) device -> DISPOSITIVO . DOISPONTOS LBRACE ID VIRGULA ID RBRACE
    (6) device -> DISPOSITIVO . LBRACE ID RBRACE
    (7) device -> DISPOSITIVO . LBRACE ID VIRGULA ID RBRACE

    DOISPONTOS      shift and go to state 18
    LBRACE          shift and go to state 19


state 5

    (1) program -> devices cmds .

    $end            reduce using rule 1 (program -> devices cmds .)


state 6

    (8) cmds -> command . cmds
    (9) cmds -> command .
    (8) cmds -> . command cmds
    (9) cmds -> . command
    (10) command -> . cmd
    (11) command -> . cmd PONTO
    (12) cmd -> . attrib
    (13) cmd -> . obsact
    (14) cmd -> . act
    (15) attrib -> . SET ID EQUALS var
    (21) obsact -> . SE obs ENTAO maybe_act
    (22) obsact -> . SE obs ENTAO act SENAO act
    (26) act -> . action ID
    (27) act -> . ENVIAR ALERTA LPAR STRING RPAR ID
    (28) act -> . ENVIAR ALERTA STRING ID
    (29) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID
    (30) act -> . ENVIAR ALERTA STRING VIRGULA ID ID
    (31) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> . ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list
    (33) action -> . LIGAR
    (34) action -> . DESLIGAR

    $end            reduce using rule 9 (cmds -> command .)
    SET             shift and go to state 11
    SE              shift and go to state 12
    ENVIAR          shift and go to state 14
    LIGAR           shift and go to state 15
    DESLIGAR        shift and go to state 16

    command                        shift and go to state 6
    cmds                           shift and go to state 20
    cmd                            shift and go to state 7
    attrib                         shift and go to state 8
    obsact                         shift and go to state 9
    act                            shift and go to state 10
    action                         shift and go to state 13

state 7

    (10) command -> cmd .
    (11) command -> cmd . PONTO

    SET             reduce using rule 10 (command -> cmd .)
    SE              reduce using rule 10 (command -> cmd .)
    ENVIAR          reduce using rule 10 (command -> cmd .)
    LIGAR           reduce using rule 10 (command -> cmd .)
    DESLIGAR        reduce using rule 10 (command -> cmd .)
    $end            reduce using rule 10 (command -> cmd .)
    PONTO           shift and go to state 21


state 8

    (12) cmd -> attrib .

    PONTO           reduce using rule 12 (cmd -> attrib .)
    SET             reduce using rule 12 (cmd -> attrib .)
    SE              reduce using rule 12 (cmd -> attrib .)
    ENVIAR          reduce using rule 12 (cmd -> attrib .)
    LIGAR           reduce using rule 12 (cmd -> attrib .)
    DESLIGAR        reduce using rule 12 (cmd -> attrib .)
    $end            reduce using rule 12 (cmd -> attrib .)


state 9

    (13) cmd -> obsact .

    PONTO           reduce using rule 13 (cmd -> obsact .)
    SET             reduce using rule 13 (cmd -> obsact .)
    SE              reduce using rule 13 (cmd -> obsact .)
    ENVIAR          reduce using rule 13 (cmd -> obsact .)
    LIGAR           reduce using rule 13 (cmd -> obsact .)
    DESLIGAR        reduce using rule 13 (cmd -> obsact .)
    $end            reduce using rule 13 (cmd -> obsact .)


state 10

    (14) cmd -> act .

    PONTO           reduce using rule 14 (cmd -> act .)
    SET             reduce using rule 14 (cmd -> act .)
    SE              reduce using rule 14 (cmd -> act .)
    ENVIAR          reduce using rule 14 (cmd -> act .)
    LIGAR           reduce using rule 14 (cmd -> act .)
    DESLIGAR        reduce using rule 14 (cmd -> act .)
    $end            reduce using rule 14 (cmd -> act .)


state 11

    (15) attrib -> SET . ID EQUALS var

    ID              shift and go to state 22


state 12

    (21) obsact -> SE . obs ENTAO maybe_act
    (22) obsact -> SE . obs ENTAO act SENAO act
    (23) obs -> . obs_base
    (24) obs -> . obs_base AND obs
    (25) obs_base -> . ID OPLOGIC var

    ID              shift and go to state 25

    obs                            shift and go to state 23
    obs_base                       shift and go to state 24

state 13

    (26) act -> action . ID

    ID              shift and go to state 26


state 14

    (27) act -> ENVIAR . ALERTA LPAR STRING RPAR ID
    (28) act -> ENVIAR . ALERTA STRING ID
    (29) act -> ENVIAR . ALERTA LPAR STRING VIRGULA ID RPAR ID
    (30) act -> ENVIAR . ALERTA STRING VIRGULA ID ID
    (31) act -> ENVIAR . ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> ENVIAR . ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list

    ALERTA          shift and go to state 27


state 15

    (33) action -> LIGAR .

    ID              reduce using rule 33 (action -> LIGAR .)


state 16

    (34) action -> DESLIGAR .

    ID              reduce using rule 34 (action -> DESLIGAR .)


state 17

    (2) devices -> device devices .

    SET             reduce using rule 2 (devices -> device devices .)
    SE              reduce using rule 2 (devices -> device devices .)
    ENVIAR          reduce using rule 2 (devices -> device devices .)
    LIGAR           reduce using rule 2 (devices -> device devices .)
    DESLIGAR        reduce using rule 2 (devices -> device devices .)


state 18

    (4) device -> DISPOSITIVO DOISPONTOS . LBRACE ID RBRACE
    (5) device -> DISPOSITIVO DOISPONTOS . LBRACE ID VIRGULA ID RBRACE

    LBRACE          shift and go to state 28


state 19

    (6) device -> DISPOSITIVO LBRACE . ID RBRACE
    (7) device -> DISPOSITIVO LBRACE . ID VIRGULA ID RBRACE

    ID              shift and go to state 29


state 20

    (8) cmds -> command cmds .

    $end            reduce using rule 8 (cmds -> command cmds .)


state 21

    (11) command -> cmd PONTO .

    SET             reduce using rule 11 (command -> cmd PONTO .)
    SE              reduce using rule 11 (command -> cmd PONTO .)
    ENVIAR          reduce using rule 11 (command -> cmd PONTO .)
    LIGAR           reduce using rule 11 (command -> cmd PONTO .)
    DESLIGAR        reduce using rule 11 (command -> cmd PONTO .)
    $end            reduce using rule 11 (command -> cmd PONTO .)


state 22

    (15) attrib -> SET ID . EQUALS var

    EQUALS          shift and go to state 30


state 23

    (21) obsact -> SE obs . ENTAO maybe_act
    (22) obsact -> SE obs . ENTAO act SENAO act

    ENTAO           shift and go to state 31


state 24

    (23) obs -> obs_base .
    (24) obs -> obs_base . AND obs

    ENTAO           reduce using rule 23 (obs -> obs_base .)
    AND             shift and go to state 32


state 25

    (25) obs_base -> ID . OPLOGIC var

    OPLOGIC         shift and go to state 33


state 26

    (26) act -> action ID .

    PONTO           reduce using rule 26 (act -> action ID .)
    SET             reduce using rule 26 (act -> action ID .)
    SE              reduce using rule 26 (act -> action ID .)
    ENVIAR          reduce using rule 26 (act -> action ID .)
    LIGAR           reduce using rule 26 (act -> action ID .)
    DESLIGAR        reduce using rule 26 (act -> action ID .)
    $end            reduce using rule 26 (act -> action ID .)
    SENAO           reduce using rule 26 (act -> action ID .)


state 27

    (27) act -> ENVIAR ALERTA . LPAR STRING RPAR ID
    (28) act -> ENVIAR ALERTA . STRING ID
    (29) act -> ENVIAR ALERTA . LPAR STRING VIRGULA ID RPAR ID
    (30) act -> ENVIAR ALERTA . STRING VIRGULA ID ID
    (31) act -> ENVIAR ALERTA . LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> ENVIAR ALERTA . LPAR STRING RPAR PARA TODOS DOISPONTOS id_list

    LPAR            shift and go to state 34
    STRING          shift and go to state 35


state 28

    (4) device -> DISPOSITIVO DOISPONTOS LBRACE . ID RBRACE
    (5) device -> DISPOSITIVO DOISPONTOS LBRACE . ID VIRGULA ID RBRACE

    ID              shift and go to state 36


state 29

    (6) device -> DISPOSITIVO LBRACE ID . RBRACE
    (7) device -> DISPOSITIVO LBRACE ID . VIRGULA ID RBRACE

    RBRACE          shift and go to state 37
    VIRGULA         shift and go to state 38


state 30

    (15) attrib -> SET ID EQUALS . var
    (16) var -> . NUM
    (17) var -> . BOOL

    NUM             shift and go to state 40
    BOOL            shift and go to state 41

    var                            shift and go to state 39

state 31

    (21) obsact -> SE obs ENTAO . maybe_act
    (22) obsact -> SE obs ENTAO . act SENAO act
    (19) maybe_act -> . act
    (20) maybe_act -> . empty
    (26) act -> . action ID
    (27) act -> . ENVIAR ALERTA LPAR STRING RPAR ID
    (28) act -> . ENVIAR ALERTA STRING ID
    (29) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID
    (30) act -> . ENVIAR ALERTA STRING VIRGULA ID ID
    (31) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> . ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list
    (18) empty -> .
    (33) action -> . LIGAR
    (34) action -> . DESLIGAR

  ! shift/reduce conflict for ENVIAR resolved as shift
  ! shift/reduce conflict for LIGAR resolved as shift
  ! shift/reduce conflict for DESLIGAR resolved as shift
    ENVIAR          shift and go to state 14
    PONTO           reduce using rule 18 (empty -> .)
    SET             reduce using rule 18 (empty -> .)
    SE              reduce using rule 18 (empty -> .)
    $end            reduce using rule 18 (empty -> .)
    LIGAR           shift and go to state 15
    DESLIGAR        shift and go to state 16

  ! ENVIAR          [ reduce using rule 18 (empty -> .) ]
  ! LIGAR           [ reduce using rule 18 (empty -> .) ]
  ! DESLIGAR        [ reduce using rule 18 (empty -> .) ]

    maybe_act                      shift and go to state 42
    act                            shift and go to state 43
    empty                          shift and go to state 44
    action                         shift and go to state 13

state 32

    (24) obs -> obs_base AND . obs
    (23) obs -> . obs_base
    (24) obs -> . obs_base AND obs
    (25) obs_base -> . ID OPLOGIC var

    ID              shift and go to state 25

    obs_base                       shift and go to state 24
    obs                            shift and go to state 45

state 33

    (25) obs_base -> ID OPLOGIC . var
    (16) var -> . NUM
    (17) var -> . BOOL

    NUM             shift and go to state 40
    BOOL            shift and go to state 41

    var                            shift and go to state 46

state 34

    (27) act -> ENVIAR ALERTA LPAR . STRING RPAR ID
    (29) act -> ENVIAR ALERTA LPAR . STRING VIRGULA ID RPAR ID
    (31) act -> ENVIAR ALERTA LPAR . STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> ENVIAR ALERTA LPAR . STRING RPAR PARA TODOS DOISPONTOS id_list

    STRING          shift and go to state 47


state 35

    (28) act -> ENVIAR ALERTA STRING . ID
    (30) act -> ENVIAR ALERTA STRING . VIRGULA ID ID

    ID              shift and go to state 48
    VIRGULA         shift and go to state 49


state 36

    (4) device -> DISPOSITIVO DOISPONTOS LBRACE ID . RBRACE
    (5) device -> DISPOSITIVO DOISPONTOS LBRACE ID . VIRGULA ID RBRACE

    RBRACE          shift and go to state 50
    VIRGULA         shift and go to state 51


state 37

    (6) device -> DISPOSITIVO LBRACE ID RBRACE .

    DISPOSITIVO     reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)
    SET             reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)
    SE              reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)
    ENVIAR          reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)
    LIGAR           reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)
    DESLIGAR        reduce using rule 6 (device -> DISPOSITIVO LBRACE ID RBRACE .)


state 38

    (7) device -> DISPOSITIVO LBRACE ID VIRGULA . ID RBRACE

    ID              shift and go to state 52


state 39

    (15) attrib -> SET ID EQUALS var .

    PONTO           reduce using rule 15 (attrib -> SET ID EQUALS var .)
    SET             reduce using rule 15 (attrib -> SET ID EQUALS var .)
    SE              reduce using rule 15 (attrib -> SET ID EQUALS var .)
    ENVIAR          reduce using rule 15 (attrib -> SET ID EQUALS var .)
    LIGAR           reduce using rule 15 (attrib -> SET ID EQUALS var .)
    DESLIGAR        reduce using rule 15 (attrib -> SET ID EQUALS var .)
    $end            reduce using rule 15 (attrib -> SET ID EQUALS var .)


state 40

    (16) var -> NUM .

    PONTO           reduce using rule 16 (var -> NUM .)
    SET             reduce using rule 16 (var -> NUM .)
    SE              reduce using rule 16 (var -> NUM .)
    ENVIAR          reduce using rule 16 (var -> NUM .)
    LIGAR           reduce using rule 16 (var -> NUM .)
    DESLIGAR        reduce using rule 16 (var -> NUM .)
    $end            reduce using rule 16 (var -> NUM .)
    AND             reduce using rule 16 (var -> NUM .)
    ENTAO           reduce using rule 16 (var -> NUM .)


state 41

    (17) var -> BOOL .

    PONTO           reduce using rule 17 (var -> BOOL .)
    SET             reduce using rule 17 (var -> BOOL .)
    SE              reduce using rule 17 (var -> BOOL .)
    ENVIAR          reduce using rule 17 (var -> BOOL .)
    LIGAR           reduce using rule 17 (var -> BOOL .)
    DESLIGAR        reduce using rule 17 (var -> BOOL .)
    $end            reduce using rule 17 (var -> BOOL .)
    AND             reduce using rule 17 (var -> BOOL .)
    ENTAO           reduce using rule 17 (var -> BOOL .)


state 42

    (21) obsact -> SE obs ENTAO maybe_act .

    PONTO           reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    SET             reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    SE              reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    ENVIAR          reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    LIGAR           reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    DESLIGAR        reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)
    $end            reduce using rule 21 (obsact -> SE obs ENTAO maybe_act .)


state 43

    (22) obsact -> SE obs ENTAO act . SENAO act
    (19) maybe_act -> act .

    SENAO           shift and go to state 53
    PONTO           reduce using rule 19 (maybe_act -> act .)
    SET             reduce using rule 19 (maybe_act -> act .)
    SE              reduce using rule 19 (maybe_act -> act .)
    ENVIAR          reduce using rule 19 (maybe_act -> act .)
    LIGAR           reduce using rule 19 (maybe_act -> act .)
    DESLIGAR        reduce using rule 19 (maybe_act -> act .)
    $end            reduce using rule 19 (maybe_act -> act .)


state 44

    (20) maybe_act -> empty .

    PONTO           reduce using rule 20 (maybe_act -> empty .)
    SET             reduce using rule 20 (maybe_act -> empty .)
    SE              reduce using rule 20 (maybe_act -> empty .)
    ENVIAR          reduce using rule 20 (maybe_act -> empty .)
    LIGAR           reduce using rule 20 (maybe_act -> empty .)
    DESLIGAR        reduce using rule 20 (maybe_act -> empty .)
    $end            reduce using rule 20 (maybe_act -> empty .)


state 45

    (24) obs -> obs_base AND obs .

    ENTAO           reduce using rule 24 (obs -> obs_base AND obs .)


state 46

    (25) obs_base -> ID OPLOGIC var .

    AND             reduce using rule 25 (obs_base -> ID OPLOGIC var .)
    ENTAO           reduce using rule 25 (obs_base -> ID OPLOGIC var .)


state 47

    (27) act -> ENVIAR ALERTA LPAR STRING . RPAR ID
    (29) act -> ENVIAR ALERTA LPAR STRING . VIRGULA ID RPAR ID
    (31) act -> ENVIAR ALERTA LPAR STRING . VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> ENVIAR ALERTA LPAR STRING . RPAR PARA TODOS DOISPONTOS id_list

    RPAR            shift and go to state 54
    VIRGULA         shift and go to state 55


state 48

    (28) act -> ENVIAR ALERTA STRING ID .

    PONTO           reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    SET             reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    SE              reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    ENVIAR          reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    LIGAR           reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    DESLIGAR        reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    $end            reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)
    SENAO           reduce using rule 28 (act -> ENVIAR ALERTA STRING ID .)


state 49

    (30) act -> ENVIAR ALERTA STRING VIRGULA . ID ID

    ID              shift and go to state 56


state 50

    (4) device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .

    DISPOSITIVO     reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)
    SET             reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)
    SE              reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)
    ENVIAR          reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)
    LIGAR           reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)
    DESLIGAR        reduce using rule 4 (device -> DISPOSITIVO DOISPONTOS LBRACE ID RBRACE .)


state 51

    (5) device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA . ID RBRACE

    ID              shift and go to state 57


state 52

    (7) device -> DISPOSITIVO LBRACE ID VIRGULA ID . RBRACE

    RBRACE          shift and go to state 58


state 53

    (22) obsact -> SE obs ENTAO act SENAO . act
    (26) act -> . action ID
    (27) act -> . ENVIAR ALERTA LPAR STRING RPAR ID
    (28) act -> . ENVIAR ALERTA STRING ID
    (29) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID
    (30) act -> . ENVIAR ALERTA STRING VIRGULA ID ID
    (31) act -> . ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list
    (32) act -> . ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list
    (33) action -> . LIGAR
    (34) action -> . DESLIGAR

    ENVIAR          shift and go to state 14
    LIGAR           shift and go to state 15
    DESLIGAR        shift and go to state 16

    act                            shift and go to state 59
    action                         shift and go to state 13

state 54

    (27) act -> ENVIAR ALERTA LPAR STRING RPAR . ID
    (32) act -> ENVIAR ALERTA LPAR STRING RPAR . PARA TODOS DOISPONTOS id_list

    ID              shift and go to state 60
    PARA            shift and go to state 61


state 55

    (29) act -> ENVIAR ALERTA LPAR STRING VIRGULA . ID RPAR ID
    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA . ID RPAR PARA TODOS DOISPONTOS id_list

    ID              shift and go to state 62


state 56

    (30) act -> ENVIAR ALERTA STRING VIRGULA ID . ID

    ID              shift and go to state 63


state 57

    (5) device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID . RBRACE

    RBRACE          shift and go to state 64


state 58

    (7) device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .

    DISPOSITIVO     reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)
    SET             reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)
    SE              reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)
    ENVIAR          reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)
    LIGAR           reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)
    DESLIGAR        reduce using rule 7 (device -> DISPOSITIVO LBRACE ID VIRGULA ID RBRACE .)


state 59

    (22) obsact -> SE obs ENTAO act SENAO act .

    PONTO           reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    SET             reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    SE              reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    ENVIAR          reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    LIGAR           reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    DESLIGAR        reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)
    $end            reduce using rule 22 (obsact -> SE obs ENTAO act SENAO act .)


state 60

    (27) act -> ENVIAR ALERTA LPAR STRING RPAR ID .

    PONTO           reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    SET             reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    SE              reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    ENVIAR          reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    LIGAR           reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    DESLIGAR        reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    $end            reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)
    SENAO           reduce using rule 27 (act -> ENVIAR ALERTA LPAR STRING RPAR ID .)


state 61

    (32) act -> ENVIAR ALERTA LPAR STRING RPAR PARA . TODOS DOISPONTOS id_list

    TODOS           shift and go to state 65


state 62

    (29) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID . RPAR ID
    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID . RPAR PARA TODOS DOISPONTOS id_list

    RPAR            shift and go to state 66


state 63

    (30) act -> ENVIAR ALERTA STRING VIRGULA ID ID .

    PONTO           reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    SET             reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    SE              reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    ENVIAR          reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    LIGAR           reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    DESLIGAR        reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    $end            reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)
    SENAO           reduce using rule 30 (act -> ENVIAR ALERTA STRING VIRGULA ID ID .)


state 64

    (5) device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .

    DISPOSITIVO     reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)
    SET             reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)
    SE              reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)
    ENVIAR          reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)
    LIGAR           reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)
    DESLIGAR        reduce using rule 5 (device -> DISPOSITIVO DOISPONTOS LBRACE ID VIRGULA ID RBRACE .)


state 65

    (32) act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS . DOISPONTOS id_list

    DOISPONTOS      shift and go to state 67


state 66

    (29) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR . ID
    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR . PARA TODOS DOISPONTOS id_list

    ID              shift and go to state 68
    PARA            shift and go to state 69


state 67

    (32) act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS . id_list
    (35) id_list -> . ID VIRGULA id_list
    (36) id_list -> . ID

    ID              shift and go to state 71

    id_list                        shift and go to state 70

state 68

    (29) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .

    PONTO           reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    SET             reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    SE              reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    ENVIAR          reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    LIGAR           reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    DESLIGAR        reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    $end            reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)
    SENAO           reduce using rule 29 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR ID .)


state 69

    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA . TODOS DOISPONTOS id_list

    TODOS           shift and go to state 72


state 70

    (32) act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .

    PONTO           reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    SET             reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    SE              reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    ENVIAR          reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    LIGAR           reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    DESLIGAR        reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    $end            reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)
    SENAO           reduce using rule 32 (act -> ENVIAR ALERTA LPAR STRING RPAR PARA TODOS DOISPONTOS id_list .)


state 71

    (35) id_list -> ID . VIRGULA id_list
    (36) id_list -> ID .

    VIRGULA         shift and go to state 73
    PONTO           reduce using rule 36 (id_list -> ID .)
    SET             reduce using rule 36 (id_list -> ID .)
    SE              reduce using rule 36 (id_list -> ID .)
    ENVIAR          reduce using rule 36 (id_list -> ID .)
    LIGAR           reduce using rule 36 (id_list -> ID .)
    DESLIGAR        reduce using rule 36 (id_list -> ID .)
    $end            reduce using rule 36 (id_list -> ID .)
    SENAO           reduce using rule 36 (id_list -> ID .)


state 72

    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS . DOISPONTOS id_list

    DOISPONTOS      shift and go to state 74


state 73

    (35) id_list -> ID VIRGULA . id_list
    (35) id_list -> . ID VIRGULA id_list
    (36) id_list -> . ID

    ID              shift and go to state 71

    id_list                        shift and go to state 75

state 74

    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS . id_list
    (35) id_list -> . ID VIRGULA id_list
    (36) id_list -> . ID

    ID              shift and go to state 71

    id_list                        shift and go to state 76

state 75

    (35) id_list -> ID VIRGULA id_list .

    PONTO           reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    SET             reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    SE              reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    ENVIAR          reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    LIGAR           reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    DESLIGAR        reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    $end            reduce using rule 35 (id_list -> ID VIRGULA id_list .)
    SENAO           reduce using rule 35 (id_list -> ID VIRGULA id_list .)


state 76

    (31) act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .

    PONTO           reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    SET             reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    SE              reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    ENVIAR          reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    LIGAR           reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    DESLIGAR        reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    $end            reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)
    SENAO           reduce using rule 31 (act -> ENVIAR ALERTA LPAR STRING VIRGULA ID RPAR PARA TODOS DOISPONTOS id_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENVIAR in state 31 resolved as shift
WARNING: shift/reduce conflict for LIGAR in state 31 resolved as shift
WARNING: shift/reduce conflict for DESLIGAR in state 31 resolved as shift
